'.source.':
  'Creates a dApp Script template':
  	prefix: "dapp"
  	body: """
      {-# STDLIB_VERSION 3 #-}
      {-# CONTENT_TYPE DAPP #-}
      {-# SCRIPT_TYPE ACCOUNT #-}

      @Callable(i)
      $1

      @Verifier(tx)
      func verify() = {
        match tx {
          # Makes sure only the dApp account can update the dApp
          case s: SetScriptTransaction => sigVerify(tx.bodyBytes, tx.proofs[0], ${2:dAppAccountPubKey})
          # add your own validation rule if need here
          case _ => false
        }
      }
    """
  	description: "Generates a dApp Script template"
  'Smart assets directives':
  	prefix: "asset"
  	body: """
      {-# STDLIB_VERSION 3 #-}
      {-# CONTENT_TYPE EXPRESSION #-}
      {-# SCRIPT_TYPE ACCOUNT #-}
    """
  	description: "Generates Waves Ride directives for a smart asset script"
  'Ride function':
  	prefix: "fun"
  	body: """
  		func ${1:funcName}(${2:param}: ${3:paramType}) = {
        $5
      }
  	"""
  	description: "Generates Waves Ride function declaration"
  'Ride If Statement':
    prefix: "rif",
    body: """
      if (${1:condition}) then ${2:code}
      else ${3:code}
    """
    description: "Ride if statement"
  'Ride Let Declaration':
    prefix: "let",
    body: """
      let ${1:name} = ${2:value}
    """
    description: "Create a variable in Ride"
    
